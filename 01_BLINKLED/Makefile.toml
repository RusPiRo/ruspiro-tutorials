#***********************************************************************************************************************
# cargo make tasks to build the example for the Raspberry Pi
#***********************************************************************************************************************
[env.development]
CC = "aarch64-none-elf-gcc"
AR = "aarch64-none-elf-ar"
OC = "aarch64-none-elf-objcopy"
CFLAGS = "-march=armv8-a -Wall -O3 -nostdlib -nostartfiles -ffreestanding -mtune=cortex-a53"
RUSTFLAGS = "-C linker=${CC} -C target-cpu=cortex-a53 -C target-feature=+strict-align,+a53,+fp-armv8,+neon -C link-arg=-nostartfiles -C link-arg=-T./link64.ld"
#BUILD_TARGET = "aarch64-unknown-linux-gnu"
KERNEL = "kernel8.img"

# CI need a different CC/AR alltogether as the aarch64-none-elf is not available there as it seems
[env.pipeline]
CC = "aarch64-linux-gnu-gcc"
AR = "aarch64-linux-gnu-ar"
OC = "aarch64-linux-gnu-objcopy"
CFLAGS = "-march=armv8-a -Wall -O3 -nostdlib -nostartfiles -ffreestanding -mtune=cortex-a53"
RUSTFLAGS = "-C linker=${CC} -C target-cpu=cortex-a53 -C link-arg=-nostartfiles -C link-arg=-T./link64.ld"
BUILD_TARGET = "aarch64-unknown-linux-gnu"
KERNEL = "kernel8.img"

[tasks.kernel]
command = "${OC}"
args = ["-O", "binary", "target/aarch64-ruspiro/release/kernel", "target/${KERNEL}"]
dependencies = [
    "build"
]

[tasks.build]
command = "cargo"
args = ["build", "--release", "--bin", "kernel", "--features", "${FEATURES}"]

[tasks.pi3]
env = { FEATURES = "ruspiro_pi3" }
run_task = "kernel"

[tasks.qemu]
command = "qemu-system-aarch64"
args = ["-M", "raspi3", "-kernel", "./target/${KERNEL}", "-nographic", "-serial", "null", "-serial", "mon:stdio", "-d", "int,mmu", "-D", "qemu.log"]
dependencies = [
    "pi3"
]

[tasks.deploy]
command = "cargo"
args = ["ruspiro-push", "-k", "./target/${KERNEL}", "-p", "COM3"]
dependencies = [
    "pi3"
]

[tasks.clean]
command = "cargo"
args = ["clean"]